@model Spovest.Models.Main.MainViewModel
@{
    ViewData["Title"] = "Profile";
    Layout = "_MainLayout";
}
<!--main content-->

<div class="col-xl-9 d-flex flex-column">
    <div class="inner_left">
        <div class="container-fluid">
            <div class="row">
                <div class="col-sm-6 col-lg-4">
                    <div class="value_wrapper cmn_st p-4">
                        <div class="d-flex align-items-center justify-content-between title_wrapper">
                            <p class="title">PORTFOLIO VALUE</p>
                            <P class="value d-flex align-items-center">
                                <i class="fas fa-plus"></i>
                                09.84% <img src="~/images/user/arrow.png" alt="Arrow">
                            </P>
                        </div>
                        <h5>$ 
                            @{
                                decimal portfolioValue = 0;
                                if (Model.CartItems != null)
                                {
                                    foreach (var item in Model.CartItems)
                                    {
                                        if (item.Player != null)
                                        {
                                            var priceData = Model.Prices
                                                .Where(x => x.PlayerId == item.PlayerId)
                                                .OrderByDescending(x => x.Sale_price)
                                                .FirstOrDefault();

                                            if (priceData != null)
                                            {
                                                decimal currentPrice = Convert.ToDecimal(priceData.Sale_price);
                                                portfolioValue += currentPrice * (decimal)item.Quantity;
                                            }
                                        }
                                    }
                                }
                                @portfolioValue.ToString("F2")
                            }
                        </h5>
                        <div class="chart_wrapper d-flex justify-content-end">
                            <div id="valueChart">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-4">
                    <div class="balance cmn_st p-4">
                        <div class="d-flex align-items-center justify-content-between title_wrapper">
                            <p class="title">ACCOUNT BALANCE</p>
                            <P class="value d-flex align-items-center">
                                <i class="fas fa-plus"></i>
                                09.84% <img src="~/images/user/arrow.png" alt="Arrow">
                            </P>
                        </div>
                        <h5>$@Model.Balance</h5>
                        <div class="chart_wrapper d-flex justify-content-end">
                            <div id="balanceChart">
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6 col-lg-4">
                    <div class="earnings cmn_st p-4">
                        <div class="d-flex align-items-center justify-content-between title_wrapper">
                            <p class="title">EARNINGS</p>
                            <P class="value d-flex align-items-center">
                                <i class="fas fa-plus"></i>
                                09.84% <img src="~/images/user/arrow.png" alt="Arrow">
                            </P>
                        </div>
                        <h5>$
                            @{
                                var totalSell = Model.Transactions_Sell.Sum(x => x.Cost);
                                var totalBuy = Model.Transactions_Buy.Sum(x => x.Cost);
                                var earnings = totalSell - totalBuy;
                            }
                            @earnings
                        </h5>
                        <div class="chart_wrapper d-flex justify-content-end">
                            <div id="earningsChart">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="table_content_wrapper">
            <h5>My Players</h5>
            <div class="table-responsive">
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Players</th>
                            <th scope="col">Share Price</th>
                            <th scope="col">Bought At</th>
                            <th scope="col">My Share</th>
                            <th scope="col">Earning</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @{
                            if (Model.CartItems != null)
                            {
                                foreach(var item in Model.CartItems)
                                {
                                    if (item.Player != null)
                                    {

                                        var actualSalePrice = Model.Prices
                                            .Where(x => x.PlayerId == item.PlayerId)
                                            .OrderByDescending(x => x.Sale_price)
                                            .First()
                                            .Sale_price;
                                        var prevPrice = Model.Prices
                                            .Where(x => x.PlayerId == item.PlayerId)
                                            .OrderByDescending(x => x.Sale_price)
                                            .Skip(1)
                                            .First()
                                            .Sale_price;
                                        var priceAtAdd = item.PriceAtAdd;
                                        var change = (actualSalePrice - priceAtAdd) * @item.Quantity;
                                        var persentageChange = ((actualSalePrice - prevPrice) / prevPrice) * 100;

                                        <tr>
                                            <td class="player_info">
                                                <div class="wrapper d-flex align-items-center">
                                                    <div class="img_wrapper">
                                                        <a href="player-profile.html" class="d-inline-flex align-items-end justify-content-center">
                                                            <img src="@item.Player.Img" alt="@item.Player.Name">
                                                        </a>
                                                        <span class="league">NBA</span>
                                                    </div>
                                                    <div class="info_wrapper">
                                                        <a asp-controller="Main" asp-action="Player" asp-route-id="@item.Player.Id">@item.Player.Name</a>
                                                        <p>@item.Player.TeamName</p>
                                                    </div>
                                                </div>
                                            </td>
                                            <td>
                                                <p class="price">
                                                    <i class="fas fa-dollar-sign"></i>
                                                    <span data-player-sale-price="@item.PlayerId">@actualSalePrice</span>
                                                </p>
                                            </td>
                                            <td>
                                                <p class="bought">
                                                    <i class="fas fa-dollar-sign"></i>
                                                    <span data-player-purchase-price="@item.PlayerId">@item.PriceAtAdd</span>
                                                </p>
                                            </td>
                                            <td>
                                                <p class="share">@item.Quantity</p>
                                            </td>
                                            <td>
                                                @{
                                                    if (change >= 0)
                                                    {
                                                        <p class="earning d-flex align-items-center">
                                                            <i class="fas fa-dollar-sign"></i>@change
                                                        </p>
                                                    }
                                                    else
                                                    {
                                                        <p class="earning d-flex align-items-center" style="color:red">
                                                            <i class="fas fa-dollar-sign"></i>@change
                                                        </p>
                                                    }
                                                }
                                                
                                            </td>
                                            <td>
                                                <div class="btn_wrapper d-flex align-items-center justify-content-end">
                                                    <button class="btn btn-primary trade-btn" 
                                                            data-player-id="@item.Player.Id" 
                                                            data-player-name="@item.Player.Name"
                                                            data-player-price="@actualSalePrice"
                                                            data-user-balance="@Model.Balance"
                                                            data-shares="@item.Quantity"
                                                            data-action="sell">SELL</button>
                                                    <button class="btn btn-primary trade-btn" 
                                                            data-player-id="@item.Player.Id" 
                                                            data-player-name="@item.Player.Name"
                                                            data-player-price="@actualSalePrice"
                                                            data-user-balance="@Model.Balance"
                                                            data-shares="@item.Quantity"
                                                            data-action="buy">BUY</button>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            }
                        }
                    </tbody>
                </table>
            </div>
            <!-- Pagination -->
            <div class="show_wrapper text-center mt-3">
                <nav>
                    <ul class="pagination justify-content-center">
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                                <a class="page-link mx-3" href="@Url.Action("Profile", new { page = i })">@i</a>
                            </li>
                        }
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

@section Scripts {
	<script src="~/js/priceUpdates.js"></script>
	<script src="~/js/trade-modal.js"></script>
}

<!--main content-->
<!--page wrapper end-->
<!--jquery-3.6.0 minified source-->
<script src="~/js/vendor/jquery-3.6.0.min.js"></script>
<!--bootstrap 5 minified bundle js source-->
<script src="~/js/vendor/bootstrap.bundle.min.js"></script>
<!--owl carousel-2.3.4 minified js source-->
<script src="~/js/vendor/owl.carousel.min.js"></script>
<!--jquery waypoints minified source-->
<script src="~/js/vendor/jquery.waypoints.min.js"></script>
<!--magnific popup-1.1.0 minified source-->
<script src="~/js/vendor/jquery.magnific-popup.min.js"></script>
<!--counter up-1.0.0 minified js source-->
<script src="~/js/vendor/jquery.counterup.min.js"></script>
<!--jquery nice select minified source-->
<script src="~/js/vendor/jquery.nice-select.min.js"></script>
<!--apexs chart minified js source-->
<script src="~/js/vendor/apexcharts.min.js"></script>
<!--apex chart customization js source-->
<script src="~/js/vendor/apex-customization.js"></script>
<!--wow animation js source-->
<script src="~/js/vendor/wow.min.js"></script>
<!--custom js source-->
<script src="~/js/main.js"></script>

